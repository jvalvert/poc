/*  Copyright 2013 MaidSafe.net limited

    This MaidSafe Software is licensed to you under (1) the MaidSafe.net Commercial License,
    version 1.0 or later, or (2) The General Public License (GPL), version 3, depending on which
    licence you accepted on initial access to the Software (the "Licences").

    By contributing code to the MaidSafe Software, or to this project generally, you agree to be
    bound by the terms of the MaidSafe Contributor Agreement, version 1.0, found in the root
    directory of this project at LICENSE, COPYING and CONTRIBUTOR respectively and also
    available at: http://www.maidsafe.net/licenses

    Unless required by applicable law or agreed to in writing, the MaidSafe Software distributed
    under the GPL Licence is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.

    See the Licences for the specific language governing permissions and limitations relating to
    use of the MaidSafe Software.                                                                 */

#ifndef VAULT_MESSAGE_TYPES_H_
#define VAULT_MESSAGE_TYPES_H_

//===================== Note =======================================================================
// This file is auto-generated by CMake from message_types.h.in
// Any modifications you make will be local only, as this file is not part of the git repository.
//==================================================================================================

#include <string>

#include "boost/variant/variant.hpp"

#include "maidsafe/nfs/message_wrapper.h"
#include "maidsafe/routing/message.h"

#include "maidsafe/common/error.h"

#include "maidsafe/nfs/client/messages.h"
#include "maidsafe/nfs/vault/messages.h"

// Auto-generated forward declarations.
// Modify in vault/cmake/*.message_types.meta if required, not here.
namespace maidsafe { namespace nfs_vault { struct DataName; } }
namespace maidsafe { namespace nfs_vault { struct DataNameAndContent; } }
namespace maidsafe { namespace nfs_client { struct DataNameAndSizeAndReturnCode; } }
namespace maidsafe { namespace nfs_vault { struct DataNameAndContentOrCheckResult; } }
namespace maidsafe { namespace nfs_vault { struct Content; } }
namespace maidsafe { namespace nfs_vault { struct DataNameAndCost; } }
namespace maidsafe { namespace nfs_client { struct DataNameAndReturnCode; } }
namespace maidsafe { namespace nfs_client { struct TipOfTreeAndReturnCode; } }
namespace maidsafe { namespace nfs_client { struct ReturnCode; } }
namespace maidsafe { namespace nfs_client { struct DataNameAndSizeAndSpaceAndReturnCode; } }
namespace maidsafe { namespace nfs_vault { struct DataNameAndSize; } }
namespace maidsafe { namespace nfs_vault { struct Empty; } }
namespace maidsafe { namespace nfs_vault { struct DiffSize; } }
namespace maidsafe { namespace nfs_vault { struct DataNameAndRandomString; } }
namespace maidsafe { namespace nfs_vault { struct DataNameOldNewVersion; } }
namespace maidsafe { namespace nfs_vault { struct DataNameAndVersion; } }
namespace maidsafe { namespace nfs_vault { struct VersionTreeCreation; } }



namespace maidsafe {

namespace vault {

// Auto-generated typedef.
// Modify in <sub-project>/cmake/cache_handler.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kNoOperation,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kCacheHandler>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kCacheHandler>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::DataName>
        NoOperationFromCacheHandlerToCacheHandler;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameAndContent>
        PutRequestFromMaidManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataName>
        PutResponseFromPmidManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutFailure,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_client::DataNameAndSizeAndReturnCode>
        PutFailureFromPmidManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kGetResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidNode>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::DataNameAndContentOrCheckResult>
        GetResponseFromPmidNodeToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kDeleteRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataName>
        DeleteRequestFromMaidManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kSynchronise,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::Content>
        SynchroniseFromDataManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountTransfer,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountTransferFromDataManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountQuery,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataName>
        AccountQueryFromDataManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/data_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountQueryResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountQueryResponseFromDataManagerToDataManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameAndCost>
        PutResponseFromDataManagerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutFailure,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_client::DataNameAndReturnCode>
        PutFailureFromDataManagerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kSynchronise,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::Content>
        SynchroniseFromMaidManagerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountTransfer,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountTransferFromMaidManagerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutVersionResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_client::TipOfTreeAndReturnCode>
        PutVersionResponseFromVersionHandlerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kCreateVersionTreeResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_client::ReturnCode>
        CreateVersionTreeResponseFromVersionHandlerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountQuery,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataName>
        AccountQueryFromMaidManagerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/maid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountQueryResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountQueryResponseFromMaidManagerToMaidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameAndContent>
        PutRequestFromDataManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutFailure,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidNode>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_client::DataNameAndSizeAndSpaceAndReturnCode>
        PutFailureFromPmidNodeToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kDeleteRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameAndSize>
        DeleteRequestFromDataManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kSynchronise,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::Content>
        SynchroniseFromPmidManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountTransfer,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountTransferFromPmidManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kCreatePmidAccountRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataName>
        CreatePmidAccountRequestFromMaidManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kIntegrityCheckRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameAndSize>
        IntegrityCheckRequestFromDataManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountQuery,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::Empty>
        AccountQueryFromPmidManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountQueryResponse,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountQueryResponseFromPmidManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_manager.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kUpdateAccount,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DiffSize>
        UpdateAccountFromDataManagerToPmidManager;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_node.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidNode>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::DataNameAndContent>
        PutRequestFromPmidManagerToPmidNode;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_node.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kDeleteRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kPmidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidNode>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::DataName>
        DeleteRequestFromPmidManagerToPmidNode;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_node.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kGetRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidNode>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::DataName>
        GetRequestFromDataManagerToPmidNode;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/pmid_node.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kIntegrityCheckRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kDataManager>,
    maidsafe::routing::SingleSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kPmidNode>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::DataNameAndRandomString>
        IntegrityCheckRequestFromDataManagerToPmidNode;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/version_handler.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kPutVersionRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameOldNewVersion>
        PutVersionRequestFromMaidManagerToVersionHandler;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/version_handler.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kDeleteBranchUntilForkRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::DataNameAndVersion>
        DeleteBranchUntilForkRequestFromMaidManagerToVersionHandler;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/version_handler.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kSynchronise,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::Content>
        SynchroniseFromVersionHandlerToVersionHandler;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/version_handler.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kCreateVersionTreeRequest,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kMaidManager>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupId,
    maidsafe::nfs_vault::VersionTreeCreation>
        CreateVersionTreeRequestFromMaidManagerToVersionHandler;

// Auto-generated typedef.
// Modify in <sub-project>/cmake/version_handler.message_types.meta if required, not here.
typedef maidsafe::nfs::MessageWrapper<
    maidsafe::nfs::MessageAction::kAccountTransfer,
    maidsafe::nfs::SourcePersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::GroupSource,
    maidsafe::nfs::DestinationPersona<maidsafe::nfs::Persona::kVersionHandler>,
    maidsafe::routing::SingleId,
    maidsafe::nfs_vault::Content>
        AccountTransferFromVersionHandlerToVersionHandler;



template<typename T>
inline bool GetVariant(const maidsafe::nfs::TypeErasedMessageWrapper& message, T& variant);

//==================================================================================================
// CacheHandler
//==================================================================================================

// Auto-generated typedef.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
typedef boost::variant<
    NoOperationFromCacheHandlerToCacheHandler> CacheHandlerServiceMessages;

// Auto-generated function.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
template<>
inline bool GetVariant<CacheHandlerServiceMessages>(
    const maidsafe::nfs::TypeErasedMessageWrapper& message,
    CacheHandlerServiceMessages& variant) {
  auto action(std::get<0>(message));
  auto source_persona(std::get<1>(message).data);
  auto destination_persona(std::get<2>(message).data);
  auto message_id(std::get<3>(message).data);
  LOG(kVerbose) << "GetVariant<CacheHandlerServiceMessages>: " << source_persona << " " << action
                << " to " << destination_persona << ", id: " << message_id;
  if (destination_persona != maidsafe::nfs::Persona::kCacheHandler) {
    LOG(kError) << "Wrong destination persona type: " << destination_persona;
    BOOST_THROW_EXCEPTION(maidsafe::MakeError(maidsafe::CommonErrors::invalid_parameter));
  }
  switch (action) {
    case maidsafe::nfs::MessageAction::kNoOperation:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kCacheHandler:
          variant = CacheHandlerServiceMessages(
              NoOperationFromCacheHandlerToCacheHandler(message));
          return true;
        default:
          break;
      }
      break;
    default:
      break;
  }
  return false;
}


//==================================================================================================
// DataManager
//==================================================================================================

// Auto-generated typedef.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
typedef boost::variant<
    PutRequestFromMaidManagerToDataManager,
    PutResponseFromPmidManagerToDataManager,
    PutFailureFromPmidManagerToDataManager,
    GetResponseFromPmidNodeToDataManager,
    DeleteRequestFromMaidManagerToDataManager,
    SynchroniseFromDataManagerToDataManager,
    AccountTransferFromDataManagerToDataManager,
    AccountQueryFromDataManagerToDataManager,
    AccountQueryResponseFromDataManagerToDataManager> DataManagerServiceMessages;

// Auto-generated function.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
template<>
inline bool GetVariant<DataManagerServiceMessages>(
    const maidsafe::nfs::TypeErasedMessageWrapper& message,
    DataManagerServiceMessages& variant) {
  auto action(std::get<0>(message));
  auto source_persona(std::get<1>(message).data);
  auto destination_persona(std::get<2>(message).data);
  auto message_id(std::get<3>(message).data);
  LOG(kVerbose) << "GetVariant<DataManagerServiceMessages>: " << source_persona << " " << action
                << " to " << destination_persona << ", id: " << message_id;
  if (destination_persona != maidsafe::nfs::Persona::kDataManager) {
    LOG(kError) << "Wrong destination persona type: " << destination_persona;
    BOOST_THROW_EXCEPTION(maidsafe::MakeError(maidsafe::CommonErrors::invalid_parameter));
  }
  switch (action) {
    case maidsafe::nfs::MessageAction::kPutRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = DataManagerServiceMessages(
              PutRequestFromMaidManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kPutResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = DataManagerServiceMessages(
              PutResponseFromPmidManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kPutFailure:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = DataManagerServiceMessages(
              PutFailureFromPmidManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kGetResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidNode:
          variant = DataManagerServiceMessages(
              GetResponseFromPmidNodeToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kDeleteRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = DataManagerServiceMessages(
              DeleteRequestFromMaidManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kSynchronise:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = DataManagerServiceMessages(
              SynchroniseFromDataManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountTransfer:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = DataManagerServiceMessages(
              AccountTransferFromDataManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountQuery:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = DataManagerServiceMessages(
              AccountQueryFromDataManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountQueryResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = DataManagerServiceMessages(
              AccountQueryResponseFromDataManagerToDataManager(message));
          return true;
        default:
          break;
      }
      break;
    default:
      break;
  }
  return false;
}


//==================================================================================================
// MaidManager
//==================================================================================================

// Auto-generated typedef.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
typedef boost::variant<
    PutResponseFromDataManagerToMaidManager,
    PutFailureFromDataManagerToMaidManager,
    SynchroniseFromMaidManagerToMaidManager,
    AccountTransferFromMaidManagerToMaidManager,
    PutVersionResponseFromVersionHandlerToMaidManager,
    CreateVersionTreeResponseFromVersionHandlerToMaidManager,
    AccountQueryFromMaidManagerToMaidManager,
    AccountQueryResponseFromMaidManagerToMaidManager> MaidManagerServiceMessages;

// Auto-generated function.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
template<>
inline bool GetVariant<MaidManagerServiceMessages>(
    const maidsafe::nfs::TypeErasedMessageWrapper& message,
    MaidManagerServiceMessages& variant) {
  auto action(std::get<0>(message));
  auto source_persona(std::get<1>(message).data);
  auto destination_persona(std::get<2>(message).data);
  auto message_id(std::get<3>(message).data);
  LOG(kVerbose) << "GetVariant<MaidManagerServiceMessages>: " << source_persona << " " << action
                << " to " << destination_persona << ", id: " << message_id;
  if (destination_persona != maidsafe::nfs::Persona::kMaidManager) {
    LOG(kError) << "Wrong destination persona type: " << destination_persona;
    BOOST_THROW_EXCEPTION(maidsafe::MakeError(maidsafe::CommonErrors::invalid_parameter));
  }
  switch (action) {
    case maidsafe::nfs::MessageAction::kPutResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = MaidManagerServiceMessages(
              PutResponseFromDataManagerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kPutFailure:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = MaidManagerServiceMessages(
              PutFailureFromDataManagerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kSynchronise:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = MaidManagerServiceMessages(
              SynchroniseFromMaidManagerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountTransfer:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = MaidManagerServiceMessages(
              AccountTransferFromMaidManagerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kPutVersionResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kVersionHandler:
          variant = MaidManagerServiceMessages(
              PutVersionResponseFromVersionHandlerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kCreateVersionTreeResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kVersionHandler:
          variant = MaidManagerServiceMessages(
              CreateVersionTreeResponseFromVersionHandlerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountQuery:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = MaidManagerServiceMessages(
              AccountQueryFromMaidManagerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountQueryResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = MaidManagerServiceMessages(
              AccountQueryResponseFromMaidManagerToMaidManager(message));
          return true;
        default:
          break;
      }
      break;
    default:
      break;
  }
  return false;
}


//==================================================================================================
// PmidManager
//==================================================================================================

// Auto-generated typedef.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
typedef boost::variant<
    PutRequestFromDataManagerToPmidManager,
    PutFailureFromPmidNodeToPmidManager,
    DeleteRequestFromDataManagerToPmidManager,
    SynchroniseFromPmidManagerToPmidManager,
    AccountTransferFromPmidManagerToPmidManager,
    CreatePmidAccountRequestFromMaidManagerToPmidManager,
    IntegrityCheckRequestFromDataManagerToPmidManager,
    AccountQueryFromPmidManagerToPmidManager,
    AccountQueryResponseFromPmidManagerToPmidManager,
    UpdateAccountFromDataManagerToPmidManager> PmidManagerServiceMessages;

// Auto-generated function.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
template<>
inline bool GetVariant<PmidManagerServiceMessages>(
    const maidsafe::nfs::TypeErasedMessageWrapper& message,
    PmidManagerServiceMessages& variant) {
  auto action(std::get<0>(message));
  auto source_persona(std::get<1>(message).data);
  auto destination_persona(std::get<2>(message).data);
  auto message_id(std::get<3>(message).data);
  LOG(kVerbose) << "GetVariant<PmidManagerServiceMessages>: " << source_persona << " " << action
                << " to " << destination_persona << ", id: " << message_id;
  if (destination_persona != maidsafe::nfs::Persona::kPmidManager) {
    LOG(kError) << "Wrong destination persona type: " << destination_persona;
    BOOST_THROW_EXCEPTION(maidsafe::MakeError(maidsafe::CommonErrors::invalid_parameter));
  }
  switch (action) {
    case maidsafe::nfs::MessageAction::kPutRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = PmidManagerServiceMessages(
              PutRequestFromDataManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kPutFailure:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidNode:
          variant = PmidManagerServiceMessages(
              PutFailureFromPmidNodeToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kDeleteRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = PmidManagerServiceMessages(
              DeleteRequestFromDataManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kSynchronise:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = PmidManagerServiceMessages(
              SynchroniseFromPmidManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountTransfer:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = PmidManagerServiceMessages(
              AccountTransferFromPmidManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kCreatePmidAccountRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = PmidManagerServiceMessages(
              CreatePmidAccountRequestFromMaidManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kIntegrityCheckRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = PmidManagerServiceMessages(
              IntegrityCheckRequestFromDataManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountQuery:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = PmidManagerServiceMessages(
              AccountQueryFromPmidManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountQueryResponse:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = PmidManagerServiceMessages(
              AccountQueryResponseFromPmidManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kUpdateAccount:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = PmidManagerServiceMessages(
              UpdateAccountFromDataManagerToPmidManager(message));
          return true;
        default:
          break;
      }
      break;
    default:
      break;
  }
  return false;
}


//==================================================================================================
// PmidNode
//==================================================================================================

// Auto-generated typedef.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
typedef boost::variant<
    PutRequestFromPmidManagerToPmidNode,
    DeleteRequestFromPmidManagerToPmidNode,
    GetRequestFromDataManagerToPmidNode,
    IntegrityCheckRequestFromDataManagerToPmidNode> PmidNodeServiceMessages;

// Auto-generated function.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
template<>
inline bool GetVariant<PmidNodeServiceMessages>(
    const maidsafe::nfs::TypeErasedMessageWrapper& message,
    PmidNodeServiceMessages& variant) {
  auto action(std::get<0>(message));
  auto source_persona(std::get<1>(message).data);
  auto destination_persona(std::get<2>(message).data);
  auto message_id(std::get<3>(message).data);
  LOG(kVerbose) << "GetVariant<PmidNodeServiceMessages>: " << source_persona << " " << action
                << " to " << destination_persona << ", id: " << message_id;
  if (destination_persona != maidsafe::nfs::Persona::kPmidNode) {
    LOG(kError) << "Wrong destination persona type: " << destination_persona;
    BOOST_THROW_EXCEPTION(maidsafe::MakeError(maidsafe::CommonErrors::invalid_parameter));
  }
  switch (action) {
    case maidsafe::nfs::MessageAction::kPutRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = PmidNodeServiceMessages(
              PutRequestFromPmidManagerToPmidNode(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kDeleteRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kPmidManager:
          variant = PmidNodeServiceMessages(
              DeleteRequestFromPmidManagerToPmidNode(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kGetRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = PmidNodeServiceMessages(
              GetRequestFromDataManagerToPmidNode(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kIntegrityCheckRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kDataManager:
          variant = PmidNodeServiceMessages(
              IntegrityCheckRequestFromDataManagerToPmidNode(message));
          return true;
        default:
          break;
      }
      break;
    default:
      break;
  }
  return false;
}


//==================================================================================================
// VersionHandler
//==================================================================================================

// Auto-generated typedef.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
typedef boost::variant<
    PutVersionRequestFromMaidManagerToVersionHandler,
    DeleteBranchUntilForkRequestFromMaidManagerToVersionHandler,
    SynchroniseFromVersionHandlerToVersionHandler,
    CreateVersionTreeRequestFromMaidManagerToVersionHandler,
    AccountTransferFromVersionHandlerToVersionHandler> VersionHandlerServiceMessages;

// Auto-generated function.
// Modify in <sub-project>/cmake/*.message_types.meta if required, not here.
template<>
inline bool GetVariant<VersionHandlerServiceMessages>(
    const maidsafe::nfs::TypeErasedMessageWrapper& message,
    VersionHandlerServiceMessages& variant) {
  auto action(std::get<0>(message));
  auto source_persona(std::get<1>(message).data);
  auto destination_persona(std::get<2>(message).data);
  auto message_id(std::get<3>(message).data);
  LOG(kVerbose) << "GetVariant<VersionHandlerServiceMessages>: " << source_persona << " " << action
                << " to " << destination_persona << ", id: " << message_id;
  if (destination_persona != maidsafe::nfs::Persona::kVersionHandler) {
    LOG(kError) << "Wrong destination persona type: " << destination_persona;
    BOOST_THROW_EXCEPTION(maidsafe::MakeError(maidsafe::CommonErrors::invalid_parameter));
  }
  switch (action) {
    case maidsafe::nfs::MessageAction::kPutVersionRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = VersionHandlerServiceMessages(
              PutVersionRequestFromMaidManagerToVersionHandler(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kDeleteBranchUntilForkRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = VersionHandlerServiceMessages(
              DeleteBranchUntilForkRequestFromMaidManagerToVersionHandler(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kSynchronise:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kVersionHandler:
          variant = VersionHandlerServiceMessages(
              SynchroniseFromVersionHandlerToVersionHandler(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kCreateVersionTreeRequest:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kMaidManager:
          variant = VersionHandlerServiceMessages(
              CreateVersionTreeRequestFromMaidManagerToVersionHandler(message));
          return true;
        default:
          break;
      }
      break;
    case maidsafe::nfs::MessageAction::kAccountTransfer:
      switch (source_persona) {
        case maidsafe::nfs::Persona::kVersionHandler:
          variant = VersionHandlerServiceMessages(
              AccountTransferFromVersionHandlerToVersionHandler(message));
          return true;
        default:
          break;
      }
      break;
    default:
      break;
  }
  return false;
}




}  // namespace vault

}  // namespace maidsafe

#endif  // VAULT_MESSAGE_TYPES_H_
