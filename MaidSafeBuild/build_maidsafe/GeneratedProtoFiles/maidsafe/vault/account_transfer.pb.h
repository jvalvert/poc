// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maidsafe/vault/account_transfer.proto

#ifndef PROTOBUF_maidsafe_2fvault_2faccount_5ftransfer_2eproto__INCLUDED
#define PROTOBUF_maidsafe_2fvault_2faccount_5ftransfer_2eproto__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace maidsafe {
namespace vault {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_maidsafe_2fvault_2faccount_5ftransfer_2eproto();
void protobuf_AssignDesc_maidsafe_2fvault_2faccount_5ftransfer_2eproto();
void protobuf_ShutdownFile_maidsafe_2fvault_2faccount_5ftransfer_2eproto();

class AccountTransfer;

// ===================================================================

class AccountTransfer : public ::google::protobuf::MessageLite {
 public:
  AccountTransfer();
  virtual ~AccountTransfer();

  AccountTransfer(const AccountTransfer& from);

  inline AccountTransfer& operator=(const AccountTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  static const AccountTransfer& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AccountTransfer* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AccountTransfer* other);

  // implements Message ----------------------------------------------

  AccountTransfer* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AccountTransfer& from);
  void MergeFrom(const AccountTransfer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes serialised_accounts = 1;
  inline int serialised_accounts_size() const;
  inline void clear_serialised_accounts();
  static const int kSerialisedAccountsFieldNumber = 1;
  inline const ::std::string& serialised_accounts(int index) const;
  inline ::std::string* mutable_serialised_accounts(int index);
  inline void set_serialised_accounts(int index, const ::std::string& value);
  inline void set_serialised_accounts(int index, const char* value);
  inline void set_serialised_accounts(int index, const void* value, size_t size);
  inline ::std::string* add_serialised_accounts();
  inline void add_serialised_accounts(const ::std::string& value);
  inline void add_serialised_accounts(const char* value);
  inline void add_serialised_accounts(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& serialised_accounts() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_serialised_accounts();

  // @@protoc_insertion_point(class_scope:maidsafe.vault.protobuf.AccountTransfer)
 private:

  ::google::protobuf::RepeatedPtrField< ::std::string> serialised_accounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_maidsafe_2fvault_2faccount_5ftransfer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_maidsafe_2fvault_2faccount_5ftransfer_2eproto();
  #endif
  friend void protobuf_AssignDesc_maidsafe_2fvault_2faccount_5ftransfer_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fvault_2faccount_5ftransfer_2eproto();

  void InitAsDefaultInstance();
  static AccountTransfer* default_instance_;
};
// ===================================================================


// ===================================================================

// AccountTransfer

// repeated bytes serialised_accounts = 1;
inline int AccountTransfer::serialised_accounts_size() const {
  return serialised_accounts_.size();
}
inline void AccountTransfer::clear_serialised_accounts() {
  serialised_accounts_.Clear();
}
inline const ::std::string& AccountTransfer::serialised_accounts(int index) const {
  return serialised_accounts_.Get(index);
}
inline ::std::string* AccountTransfer::mutable_serialised_accounts(int index) {
  return serialised_accounts_.Mutable(index);
}
inline void AccountTransfer::set_serialised_accounts(int index, const ::std::string& value) {
  serialised_accounts_.Mutable(index)->assign(value);
}
inline void AccountTransfer::set_serialised_accounts(int index, const char* value) {
  serialised_accounts_.Mutable(index)->assign(value);
}
inline void AccountTransfer::set_serialised_accounts(int index, const void* value, size_t size) {
  serialised_accounts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccountTransfer::add_serialised_accounts() {
  return serialised_accounts_.Add();
}
inline void AccountTransfer::add_serialised_accounts(const ::std::string& value) {
  serialised_accounts_.Add()->assign(value);
}
inline void AccountTransfer::add_serialised_accounts(const char* value) {
  serialised_accounts_.Add()->assign(value);
}
inline void AccountTransfer::add_serialised_accounts(const void* value, size_t size) {
  serialised_accounts_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AccountTransfer::serialised_accounts() const {
  return serialised_accounts_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AccountTransfer::mutable_serialised_accounts() {
  return &serialised_accounts_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace vault
}  // namespace maidsafe

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_maidsafe_2fvault_2faccount_5ftransfer_2eproto__INCLUDED
