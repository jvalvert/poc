// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maidsafe/vault/version_handler/action_create_version_tree.proto

#ifndef PROTOBUF_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto__INCLUDED
#define PROTOBUF_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto__INCLUDED

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4127 4244 4267)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace maidsafe {
namespace vault {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto();
void protobuf_AssignDesc_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto();
void protobuf_ShutdownFile_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto();

class ActionCreateVersionTree;

// ===================================================================

class ActionCreateVersionTree : public ::google::protobuf::MessageLite {
 public:
  ActionCreateVersionTree();
  virtual ~ActionCreateVersionTree();

  ActionCreateVersionTree(const ActionCreateVersionTree& from);

  inline ActionCreateVersionTree& operator=(const ActionCreateVersionTree& from) {
    CopyFrom(from);
    return *this;
  }

  static const ActionCreateVersionTree& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ActionCreateVersionTree* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ActionCreateVersionTree* other);

  // implements Message ----------------------------------------------

  ActionCreateVersionTree* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ActionCreateVersionTree& from);
  void MergeFrom(const ActionCreateVersionTree& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes serialised_version = 1;
  inline bool has_serialised_version() const;
  inline void clear_serialised_version();
  static const int kSerialisedVersionFieldNumber = 1;
  inline const ::std::string& serialised_version() const;
  inline void set_serialised_version(const ::std::string& value);
  inline void set_serialised_version(const char* value);
  inline void set_serialised_version(const void* value, size_t size);
  inline ::std::string* mutable_serialised_version();
  inline ::std::string* release_serialised_version();
  inline void set_allocated_serialised_version(::std::string* serialised_version);

  // required int32 max_versions = 2;
  inline bool has_max_versions() const;
  inline void clear_max_versions();
  static const int kMaxVersionsFieldNumber = 2;
  inline ::google::protobuf::int32 max_versions() const;
  inline void set_max_versions(::google::protobuf::int32 value);

  // required int32 max_branches = 3;
  inline bool has_max_branches() const;
  inline void clear_max_branches();
  static const int kMaxBranchesFieldNumber = 3;
  inline ::google::protobuf::int32 max_branches() const;
  inline void set_max_branches(::google::protobuf::int32 value);

  // required int32 message_id = 4;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 4;
  inline ::google::protobuf::int32 message_id() const;
  inline void set_message_id(::google::protobuf::int32 value);

  // required bytes originator = 5;
  inline bool has_originator() const;
  inline void clear_originator();
  static const int kOriginatorFieldNumber = 5;
  inline const ::std::string& originator() const;
  inline void set_originator(const ::std::string& value);
  inline void set_originator(const char* value);
  inline void set_originator(const void* value, size_t size);
  inline ::std::string* mutable_originator();
  inline ::std::string* release_originator();
  inline void set_allocated_originator(::std::string* originator);

  // @@protoc_insertion_point(class_scope:maidsafe.vault.protobuf.ActionCreateVersionTree)
 private:
  inline void set_has_serialised_version();
  inline void clear_has_serialised_version();
  inline void set_has_max_versions();
  inline void clear_has_max_versions();
  inline void set_has_max_branches();
  inline void clear_has_max_branches();
  inline void set_has_message_id();
  inline void clear_has_message_id();
  inline void set_has_originator();
  inline void clear_has_originator();

  ::std::string* serialised_version_;
  ::google::protobuf::int32 max_versions_;
  ::google::protobuf::int32 max_branches_;
  ::std::string* originator_;
  ::google::protobuf::int32 message_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto();
  #endif
  friend void protobuf_AssignDesc_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto();

  void InitAsDefaultInstance();
  static ActionCreateVersionTree* default_instance_;
};
// ===================================================================


// ===================================================================

// ActionCreateVersionTree

// required bytes serialised_version = 1;
inline bool ActionCreateVersionTree::has_serialised_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionCreateVersionTree::set_has_serialised_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionCreateVersionTree::clear_has_serialised_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionCreateVersionTree::clear_serialised_version() {
  if (serialised_version_ != &::google::protobuf::internal::GetEmptyString()) {
    serialised_version_->clear();
  }
  clear_has_serialised_version();
}
inline const ::std::string& ActionCreateVersionTree::serialised_version() const {
  return *serialised_version_;
}
inline void ActionCreateVersionTree::set_serialised_version(const ::std::string& value) {
  set_has_serialised_version();
  if (serialised_version_ == &::google::protobuf::internal::GetEmptyString()) {
    serialised_version_ = new ::std::string;
  }
  serialised_version_->assign(value);
}
inline void ActionCreateVersionTree::set_serialised_version(const char* value) {
  set_has_serialised_version();
  if (serialised_version_ == &::google::protobuf::internal::GetEmptyString()) {
    serialised_version_ = new ::std::string;
  }
  serialised_version_->assign(value);
}
inline void ActionCreateVersionTree::set_serialised_version(const void* value, size_t size) {
  set_has_serialised_version();
  if (serialised_version_ == &::google::protobuf::internal::GetEmptyString()) {
    serialised_version_ = new ::std::string;
  }
  serialised_version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActionCreateVersionTree::mutable_serialised_version() {
  set_has_serialised_version();
  if (serialised_version_ == &::google::protobuf::internal::GetEmptyString()) {
    serialised_version_ = new ::std::string;
  }
  return serialised_version_;
}
inline ::std::string* ActionCreateVersionTree::release_serialised_version() {
  clear_has_serialised_version();
  if (serialised_version_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = serialised_version_;
    serialised_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void ActionCreateVersionTree::set_allocated_serialised_version(::std::string* serialised_version) {
  if (serialised_version_ != &::google::protobuf::internal::GetEmptyString()) {
    delete serialised_version_;
  }
  if (serialised_version) {
    set_has_serialised_version();
    serialised_version_ = serialised_version;
  } else {
    clear_has_serialised_version();
    serialised_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}

// required int32 max_versions = 2;
inline bool ActionCreateVersionTree::has_max_versions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionCreateVersionTree::set_has_max_versions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionCreateVersionTree::clear_has_max_versions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionCreateVersionTree::clear_max_versions() {
  max_versions_ = 0;
  clear_has_max_versions();
}
inline ::google::protobuf::int32 ActionCreateVersionTree::max_versions() const {
  return max_versions_;
}
inline void ActionCreateVersionTree::set_max_versions(::google::protobuf::int32 value) {
  set_has_max_versions();
  max_versions_ = value;
}

// required int32 max_branches = 3;
inline bool ActionCreateVersionTree::has_max_branches() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionCreateVersionTree::set_has_max_branches() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionCreateVersionTree::clear_has_max_branches() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionCreateVersionTree::clear_max_branches() {
  max_branches_ = 0;
  clear_has_max_branches();
}
inline ::google::protobuf::int32 ActionCreateVersionTree::max_branches() const {
  return max_branches_;
}
inline void ActionCreateVersionTree::set_max_branches(::google::protobuf::int32 value) {
  set_has_max_branches();
  max_branches_ = value;
}

// required int32 message_id = 4;
inline bool ActionCreateVersionTree::has_message_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActionCreateVersionTree::set_has_message_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActionCreateVersionTree::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActionCreateVersionTree::clear_message_id() {
  message_id_ = 0;
  clear_has_message_id();
}
inline ::google::protobuf::int32 ActionCreateVersionTree::message_id() const {
  return message_id_;
}
inline void ActionCreateVersionTree::set_message_id(::google::protobuf::int32 value) {
  set_has_message_id();
  message_id_ = value;
}

// required bytes originator = 5;
inline bool ActionCreateVersionTree::has_originator() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActionCreateVersionTree::set_has_originator() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActionCreateVersionTree::clear_has_originator() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActionCreateVersionTree::clear_originator() {
  if (originator_ != &::google::protobuf::internal::GetEmptyString()) {
    originator_->clear();
  }
  clear_has_originator();
}
inline const ::std::string& ActionCreateVersionTree::originator() const {
  return *originator_;
}
inline void ActionCreateVersionTree::set_originator(const ::std::string& value) {
  set_has_originator();
  if (originator_ == &::google::protobuf::internal::GetEmptyString()) {
    originator_ = new ::std::string;
  }
  originator_->assign(value);
}
inline void ActionCreateVersionTree::set_originator(const char* value) {
  set_has_originator();
  if (originator_ == &::google::protobuf::internal::GetEmptyString()) {
    originator_ = new ::std::string;
  }
  originator_->assign(value);
}
inline void ActionCreateVersionTree::set_originator(const void* value, size_t size) {
  set_has_originator();
  if (originator_ == &::google::protobuf::internal::GetEmptyString()) {
    originator_ = new ::std::string;
  }
  originator_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActionCreateVersionTree::mutable_originator() {
  set_has_originator();
  if (originator_ == &::google::protobuf::internal::GetEmptyString()) {
    originator_ = new ::std::string;
  }
  return originator_;
}
inline ::std::string* ActionCreateVersionTree::release_originator() {
  clear_has_originator();
  if (originator_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = originator_;
    originator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void ActionCreateVersionTree::set_allocated_originator(::std::string* originator) {
  if (originator_ != &::google::protobuf::internal::GetEmptyString()) {
    delete originator_;
  }
  if (originator) {
    set_has_originator();
    originator_ = originator;
  } else {
    clear_has_originator();
    originator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace vault
}  // namespace maidsafe

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
#  pragma warning(pop)
#endif

#endif  // PROTOBUF_maidsafe_2fvault_2fversion_5fhandler_2faction_5fcreate_5fversion_5ftree_2eproto__INCLUDED
